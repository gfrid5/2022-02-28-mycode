---
- name: Openstack Exmaple
  hosts: localhost
  connection: local
  gather_facts: false

  # in order for this to work:
  # python3 -m pip install openstacksdk
  
  vars:

    state: "present"
    student_number: "42"
    student_name: authurDent
    public_key:  "{{ lookup('file', '/home/centos/.ssh/id_rsa.pub') }}"

  tasks:

    # remove the rotten cirros image that ships with openstack image
    - name: REMOVE the cirros VM image that ships with OpenStack
      openstack.cloud.image:
        cloud: alta3 # this comes from clouds.yml (see directory)
        name: cirros
        state: absent

    - name: Download cirros VM image
      ansible.builtin.get_url:
        url: "http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img"
        dest: ~/cirros.img

    # UPLOAD AN IMAGE FROM AN HTTPS SITE
    - name: UPLOAD a new cirros VM image to OpenStack
      openstack.cloud.image:
        cloud: alta3 # cred from clouds.yml
        name: cirros  # name of image to create
        container_format: bare 
        disk_format: qcow2
        state: present
        filename: "cirros.img"
        kernel: cirros-vmlinuz
        ramdisk: cirros-initrd
        properties:
          cpu_arch: x86_64
          distro: ubuntu


    - name: Upload a Key Pair to OpenStack cloud
      openstack.cloud.keypair:
        cloud: alta3  # this is a reference to clouds.yml
        state: "{{ state }}"                 # we want the key pair to be present
        name: "ansible-key-{{ student_name }}"   # unique name for our key (in openstack)
        public_key: "{{ public_key }}"           # ref to our public key var


    - name: Launch an OpenStack VM
      openstack.cloud.server:
        cloud: alta3
        state: "{{ state }}"
        name:  "ansible-{{ student_number }}"   # name of VM we are building
        image: "cirros"                         # name of a VM image
        flavor: "m1.tiny"                       # size of the VM to be built
        network: "public"
        key_name: "ansible-key-{{ student_name }}"  # we just made this
        meta:
           type: "ansible-{{ student_number }}"
           class: "ansible"
           student_name: "{{ student_name }}"
           student_number: "{{ student_number }}"
           bootstrapped: "false"
           configured: "false"
           hostname: "ansible-{{ student_number }}"
        auto_ip: no
        wait: yes
        timeout: 600
      register: instances                       # save the results that are returned

    - name: Show the results of building our VM
      debug:
        msg: "{{ instances }}"
